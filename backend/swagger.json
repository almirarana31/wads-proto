{
  "openapi": "3.0.0",
  "info": {
    "title": "Bianca Helpdesk API",
    "version": "1.0.0",
    "description": "API documentation for Bianca Aesthetic Clinic's Helpdesk System."
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/user",
      "description": "User and Guest Endpoints"
    },
    {
      "url": "http://localhost:5000/api/staff",
      "description": "Staff Endpoints"
    },
    {
      "url": "http://localhost:5000/api/admin",
      "description": "Admin Endpoints"
    },
    {
      "url": "http://localhost:5000/api/ticket",
      "description": "Ticket Management"
    },
    {
      "url": "http://localhost:5000/api/conversation",
      "description": "Conversation Endpoints"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "tags": ["Ticket Management"],
        "summary": "Get available ticket categories",
        "description": "Returns a list of all available ticket categories",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "List of ticket categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "name": "General"
                  },
                  {
                    "id": 2,
                    "name": "Billing"
                  },
                  {
                    "id": 3,
                    "name": "IT Support"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      }
    },
    "/activate/{token}": {
      "get": {
        "tags": ["User"],
        "summary": "Activate a user account",
        "description": "Activates a user account using the token sent to their email after registration",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Activation token received via email"
          }
        ],
        "responses": {
          "200": {
            "description": "Account successfully verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Successfully verified account!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "examples": {
                  "emailExists": {
                    "value": {
                      "message": "email already exists"
                    }
                  },
                  "tokenExpired": {
                    "value": {
                      "message": "jwt expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sign-up": {
      "post": {
        "tags": ["User"],
        "summary": "Register a new user account",
        "description": "Creates a new user account and sends OTP for verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { 
                    "type": "string",
                    "description": "Username must be at least 3 characters long"
                  },
                  "password": { 
                    "type": "string",
                    "description": "Password must be 6-20 characters with 1 number, 1 lowercase, and 1 uppercase letter"
                  },
                  "email": { 
                    "type": "string",
                    "format": "email",
                    "description": "Valid email address"
                  }
                },
                "required": ["username", "password", "email"]
              },
              "example": {
                "username": "Username",
                "password": "Pass123",
                "email": "example@email.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered and OTP sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "username": { "type": "string" },
                    "email": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Successfully sent otp. Please check your email at example@email.com",
                  "username": "Username",
                  "email": "example@email.com"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },                "examples": {
                  "invalidEmail": {
                    "value": {
                      "message": "Invalid email"
                    }
                  },
                  "emailInUse": {
                    "value": {
                      "message": "Email is in use"
                    }
                  },
                  "invalidPassword": {
                    "value": {
                      "message": "Password should be 6 to 20 characters long with a numeric, 1 lowercase and 1 uppercase letters"
                    }
                  },
                  "invalidUsername": {
                    "value": {
                      "message": "Username length must be 3 or longer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forget-password": {
      "post": {
        "tags": ["User"],
        "summary": "Request password reset",
        "description": "Initiates the password reset process by sending an email with a reset link",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's registered email address"
                  }
                },
                "required": ["email"]
              },
              "example": {
                "email": "user@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Password reset link has been sent to your email"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Invalid email"
                }
              }
            }
          }
        }
      }
    },
    "/verify-reset-link/{token}": {
      "get": {
        "tags": ["User"],
        "summary": "Verify password reset link",
        "description": "Verifies the token in the password reset link",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Password reset token received via email"
          }
        ],
        "responses": {
          "200": {
            "description": "Token verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "valid": { "type": "boolean" }
                  }
                },
                "example": {
                  "message": "Token is valid",
                  "valid": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "valid": { "type": "boolean" }
                  }
                },
                "example": {
                  "message": "Token is expired or invalid",
                  "valid": false
                }
              }
            }
          }
        }
      }
    },
    "/enter-new-password/{token}": {
      "post": {
        "tags": ["User"],
        "summary": "Set new password",
        "description": "Sets a new password using the reset token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Password reset token received via email"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "New password (must be 6-20 characters with 1 number, 1 lowercase, and 1 uppercase letter)"
                  }
                },
                "required": ["password"]
              },
              "example": {
                "password": "NewPass123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Password has been successfully reset"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "examples": {
                  "invalidToken": {
                    "value": {
                      "message": "Token is expired or invalid"
                    }
                  },
                  "invalidPassword": {
                    "value": {
                      "message": "Password should be 6 to 20 characters long with a numeric, 1 lowercase and 1 uppercase letters"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/log-in": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "description": "Authenticates a user and returns session tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { 
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": { 
                    "type": "string",
                    "description": "User's password"
                  },
                  "rememberMe": { 
                    "type": "boolean",
                    "description": "Whether to extend session token validity"
                  }
                },
                "required": ["email", "password"]
              },
              "example": {
                "email": "user@example.com",
                "password": "Pass123",
                "rememberMe": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "sessionToken": { 
                      "type": "string",
                      "description": "JWT token for session authentication"
                    },
                    "localToken": { 
                      "type": "string",
                      "description": "Token for extended session if rememberMe is true",
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "message": "Successful login",
                  "sessionToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTgsInN0YWZmX2lkIjowLCJlbWFpbCI6InJhbmFhbG1pcmFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJBbGx5IENVU1RPTUVSIiwiaXNfZ3Vlc3QiOmZhbHNlLCJpYXQiOjE3NDg3MDQ3MTMsImV4cCI6MTc0ODcwODMxM30.F7OBV6KTn-XnpN88lf8igScMH4dZWa66CwFQkh6Np_I",
                  "localToken": null
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Incorrect credentials"
                }
              }
            }
          }
        }
      }
    },    
    "/{id}": {
      "get": {
        "tags": ["Ticket Management"],
        "summary": "Get ticket details",
        "description": "Retrieves detailed information about a specific ticket. Requires authentication of the ticket owner.",
        "security": [
          { "bearerAuth": [] },
          {}
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "subject": { "type": "string" },
                    "description": { "type": "string" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "note": { "type": "string", "nullable": true },
                    "Status": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" }
                      }
                    },
                    "Category": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" }
                      }
                    },
                    "Priority": { "type": "object", "nullable": true },
                    "Staff": { "type": "object", "nullable": true },
                    "User": {
                      "type": "object",
                      "properties": {
                        "username": { "type": "string" },
                        "email": { "type": "string" },
                        "is_guest": { "type": "boolean" }
                      }
                    }
                  }
                },
                "example": {
                  "id": 13,
                  "subject": "Updated Ticket Title",
                  "description": "This is the updated description",
                  "createdAt": "2025-06-01T14:12:06.945Z",
                  "note": null,
                  "Status": {
                    "name": "Cancelled"
                  },
                  "Category": {
                    "name": "Billing"
                  },
                  "Priority": null,
                  "Staff": null,
                  "User": {
                    "username": "User",
                    "email": "example@email.com",
                    "is_guest": false
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Edit a ticket",
        "description": "Updates an existing ticket. Requires user authentication. Only tickets with 'pending' status can be edited.",
        "security": [
          { "bearerAuth": [] },
          {}
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to edit"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { 
                    "type": "string",
                    "description": "Updated title of the ticket"
                  },
                  "category_id": { 
                    "type": "integer",
                    "description": "Updated category ID: 1=General, 2=Billing, 3=IT Support",
                    "enum": [1, 2, 3]
                  },
                  "description": { 
                    "type": "string",
                    "description": "Updated description of the issue"
                  }
                },
                "required": ["title", "category_id", "description"]
              },
              "example": {
                "title": "Updated Ticket Title",
                "category_id": 2,
                "description": "This is the updated description"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ticket successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Successfully updated ticket"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "insert or update on table \"ticket\" violates foreign key constraint \"ticket_category_id_fkey\""
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Cancel a ticket",
        "description": "Cancels an existing ticket. Requires user authentication. Only tickets with 'pending' status can be cancelled.",
        "security": [
          { "bearerAuth": [] },
          {}
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to cancel"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket successfully cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Successfully cancelled ticket"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }        }
      }
    },
      "patch": {
        "tags": ["Conversations"],
        "summary": "Close a conversation",
        "description": "Closes an active conversation. Requires authentication of the staff assigned to the ticket.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the conversation to close"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversation successfully closed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Conversation successfully closed"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or not the assigned staff",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        } 
    },
    "/account/{adminID}/activation-status": {
      "get": {
        "tags": ["Admin"],
        "summary": "Gets the activation status of a particular staff",
        "description": "Returns the isGuest column of the user object. What determines guest status is the isGuest = true or isGuest = false. If true, account has been deactivated. Otherwise still a valid staff.",
        "parameters": [
          {
            "name": "adminID",
            "in": "path",
            "description": "The ID of the staff being targeted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 12
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved staff activation status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "is_guest": {
                      "type": "boolean",
                      "description": "True if the account is deactivated (guest status), false otherwise."
                    }
                  }
                },
                "example": {
                  "is_guest": false
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/staff/ticket/{ticketID}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Retrieve eligible staff for a ticket",
        "description": "Fetches a list of eligible staff members who can be assigned to a specific ticket, based on its category. Includes staff details and their current assignment statistics.",
        "parameters": [
          {
            "name": "ticketID",
            "in": "path",
            "description": "The ID of the ticket for which to find eligible staff.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 101
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of eligible staff.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "staff_id": {
                        "type": "integer",
                        "description": "The unique ID of the staff member."
                      },
                      "staff_name": {
                        "type": "string",
                        "description": "The username of the staff member."
                      },
                      "field_id": {
                        "type": "integer",
                        "description": "The ID of the field/category the staff member is assigned to."
                      },
                      "is_guest": {
                        "type": "boolean",
                        "description": "Indicates if the staff account is a guest (deactivated). Eligible staff will have this as false."
                      },
                      "assigned": {
                        "type": "integer",
                        "description": "Total number of tickets assigned to this staff member."
                      },
                      "in_progress": {
                        "type": "integer",
                        "description": "Number of tickets currently in progress for this staff member."
                      },
                      "resolved": {
                        "type": "integer",
                        "description": "Number of tickets resolved by this staff member."
                      },
                      "resolution_rate": {
                        "type": "number",
                        "format": "float",
                        "description": "Resolution rate of the staff member (resolved tickets / total assigned tickets * 100)."
                      },
                      "is_current_staff": {
                        "type": "boolean",
                        "description": "True if this staff member is currently assigned to the ticket, false otherwise."
                      }
                    }
                  }
                },
                "example": [
                  {
                    "staff_id": 1,
                    "staff_name": "john.doe",
                    "field_id": 5,
                    "is_guest": false,
                    "assigned": 5,
                    "in_progress": 2,
                    "resolved": 3,
                    "resolution_rate": 60.00,
                    "is_current_staff": true
                  },
                  {
                    "staff_id": 2,
                    "staff_name": "jane.smith",
                    "field_id": 5,
                    "is_guest": false,
                    "assigned": 3,
                    "in_progress": 1,
                    "resolved": 2,
                    "resolution_rate": 66.67,
                    "is_current_staff": false
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Ticket not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },"/staff-detail/{staffID}": {
        "get": {
          "tags": ["Admin"],
          "summary": "Get detailed information for a specific staff member",
          "description": "Retrieves comprehensive details about a staff member, including their username, assigned field, creation date, and statistics on tickets handled (in progress, resolved, cancelled).",
          "parameters": [
            {
              "name": "staffID",
              "in": "path",
              "description": "The unique ID of the staff member to retrieve details for.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "example": 1
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved staff details.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "staff_name": {
                          "type": "string",
                          "description": "The username of the staff member."
                        },
                        "field_name": {
                          "type": "string",
                          "description": "The name of the category/field the staff member belongs to."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time the staff member's record was created."
                        },
                        "in_progress": {
                          "type": "integer",
                          "description": "Number of tickets currently in progress assigned to this staff member."
                        },
                        "resolved": {
                          "type": "integer",
                          "description": "Number of tickets resolved by this staff member."
                        },
                        "cancelled": {
                          "type": "integer",
                          "description": "Number of tickets cancelled that were assigned to this staff member."
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "staff_name": "john.doe",
                      "field_name": "Technical Support",
                      "created_at": "2023-01-15T09:30:00Z",
                      "in_progress": 5,
                      "resolved": 20,
                      "cancelled": 2
                    }
                  ]
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "An unexpected error occurred"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        },
        "patch": {
          "tags": ["Admin"],
          "summary": "Edit staff member details",
          "description": "Allows an administrator to update a staff member's details, such as their assigned category and guest status. Changes are applied only for provided fields. General validation and resource not found errors are handled by middleware.",
          "parameters": [
            {
              "name": "staffID",
              "in": "path",
              "description": "The unique ID of the staff member to update.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "example": 1
            }
          ],
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category_id": {
                      "type": "integer",
                      "description": "The ID of the new category/field to assign to the staff member. Optional, if not provided, the category will not be updated."
                    },
                    "is_guest": {
                      "type": "boolean",
                      "description": "Set to true to deactivate the staff account (make them a guest), or false to activate/keep active. Optional, if not provided, the guest status will not be updated."
                    }
                  },
                  "minProperties": 1,
                  "nullable": true
                },
                "example": {
                  "category_id": 5,
                  "is_guest": false
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Staff details successfully updated.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "Successfully editted staff"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "An unexpected error occurred"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
      "/staff": {
        "post": {
          "tags": ["Admin"],
          "summary": "Create a new staff member",
          "description": "Allows an administrator to create a new staff account by providing their email, assigned field, and role.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "The email address of the new staff member. Must be unique."
                    },
                    "field_id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The ID of the field/category the staff member will be assigned to."
                    },
                    "role_id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The ID of the role assigned to the staff member."
                    }
                  },
                  "required": ["email", "field_id", "role_id"]
                },
                "example": {
                  "email": "new.staff@example.com",
                  "field_id": 1,
                  "role_id": 3
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created new staff member.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "Successfully created new staff"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "examples": {
                    "emailExists": {
                      "value": {
                        "message": "Email already exists"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "An unexpected error occurred"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      }, 
      "/sign-out": {
        "get": {
          "tags": ["User"],
          "summary": "Sign out the current user",
          "description": "Logs out the currently authenticated user. This endpoint sends a confirmation message and a flag to instruct the client (frontend) to clear any locally stored authentication tokens or session data.",
          "responses": {
            "200": {
              "description": "Successfully signed out.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Confirmation message for successful sign-out."
                      },
                      "clearLocalStorage": {
                        "type": "boolean",
                        "description": "A flag indicating that the client should clear its local storage (e.g., authentication tokens)."
                      }
                    },
                    "required": ["message", "clearLocalStorage"]
                  },
                  "example": {
                    "message": "Successfully signed out",
                    "clearLocalStorage": true
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message if an unexpected server error occurs."
                      }
                    },
                    "required": ["error"]
                  },
                  "example": {
                    "error": "An unexpected error occurred"
                  }
                }
              }
            }
          }
        }
      },
      "/details": {
        "get": {
          "tags": ["Staff", "User"],
          "summary": "Get details of the authenticated user",
          "description": "Retrieves the email, username, and dynamically determined role (user, staff, or admin) of the currently authenticated user. This endpoint is used to display the profile details of the logged-in user. The role is determined based on the user's association with staff records: if staff_id is present and role_id is 1, they are 'staff'; if staff_id is present and role_id is 2, they are 'admin'; otherwise, they are a 'user'.",
          "responses": {
            "200": {
              "description": "Successfully retrieved user details.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the authenticated user."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the authenticated user."
                      },
                      "role": {
                        "type": "string",
                        "enum": ["user", "staff", "admin"],
                        "description": "The role of the authenticated user."
                      }
                    },
                    "required": ["email", "username", "role"]
                  },
                  "examples": {
                    "userRole": {
                      "summary": "Example for a regular user",
                      "value": {
                        "email": "user@example.com",
                        "username": "regular_user",
                        "role": "user"
                      }
                    },
                    "staffRole": {
                      "summary": "Example for a staff member",
                      "value": {
                        "email": "staff@example.com",
                        "username": "staff_member",
                        "role": "staff"
                      }
                    },
                    "adminRole": {
                      "summary": "Example for an administrator",
                      "value": {
                        "email": "admin@example.com",
                        "username": "admin_user",
                        "role": "admin"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "An unexpected error occurred"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      }, 
      "/tickets/pool": {
        "get": {
          "tags": ["Staff"],
          "summary": "Retrieve available tickets in the pool for staff",
          "description": "Fetches a list of unassigned tickets that are available for claiming by a staff member. Tickets in this pool are specifically filtered by the authenticated staff member's assigned category and are only those with a status of 'new' (status_id: 1). This pool serves as a fallback for tickets that couldn't be auto-assigned because all eligible staff in that category already had 3 or more tickets in progress.",
          "responses": {
            "200": {
              "description": "Successfully retrieved the list of available tickets in the pool.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The unique ID of the ticket."
                        },
                        "subject": {
                          "type": "string",
                          "description": "The subject or title of the ticket."
                        },
                        "description": {
                          "type": "string",
                          "description": "The detailed description of the ticket issue."
                        },
                        "category_id": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The ID of the category this ticket belongs to (matches staff's field_id)."
                        },
                        "status_id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The current status ID of the ticket (1 indicates new/unassigned in the pool)."
                        },
                        "priority_id": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The ID of the ticket's priority (1=High, 2=Medium, 3=Low, etc.)."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the ticket was created."
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the ticket was last updated."
                        },
                        "Priority": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the priority (e.g., 'High', 'Medium', 'Low')."
                            }
                          },
                          "required": ["name"]
                        },
                        "User": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "The username of the ticket creator."
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "The email of the ticket creator."
                            }
                          },
                          "required": ["username", "email"]
                        }
                      },
                      "required": [
                        "id",
                        "subject",
                        "description",
                        "category_id",
                        "status_id",
                        "priority_id",
                        "createdAt",
                        "updatedAt",
                        "Priority",
                        "User"
                      ]
                    }
                  },
                  "example": [
                    {
                      "id": 101,
                      "subject": "Internet connection issue",
                      "description": "My internet is completely down since yesterday evening.",
                      "category_id": 1,
                      "status_id": 1,
                      "priority_id": 1,
                      "createdAt": "2025-06-05T10:00:00Z",
                      "updatedAt": "2025-06-05T10:00:00Z",
                      "Priority": {
                        "name": "High"
                      },
                      "User": {
                        "username": "customer.one",
                        "email": "customer.one@example.com"
                      }
                    },
                    {
                      "id": 102,
                      "subject": "Software installation help",
                      "description": "Need help installing new design software.",
                      "category_id": 1,
                      "status_id": 1,
                      "priority_id": 2,
                      "createdAt": "2025-06-06T14:30:00Z",
                      "updatedAt": "2025-06-06T14:30:00Z",
                      "Priority": {
                        "name": "Medium"
                      },
                      "User": {
                        "username": "customer.two",
                        "email": "customer.two@example.com"
                      }
                    }
                  ]
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "An unexpected error occurred"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      }, 
      "/{conversationID}": {
        "patch": {
          "tags": ["Conversations"],
          "summary": "Close a conversation",
          "description": "Allows an authenticated staff member to close a specific conversation, marking it as ended and setting its closed status to true. Authorization (conversation and staff) is handled by middleware.",
          "parameters": [
            {
              "name": "conversationID",
              "in": "path",
              "description": "The unique ID of the conversation to be closed.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              },
              "example": 456
            }
          ],
          "responses": {
            "200": {
              "description": "Conversation successfully closed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "Conversation successfully closed"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "An unexpected error occurred"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
    "/tickets": {
      "post": {
        "tags": ["User"],
        "summary": "Submit a new ticket",
        "description": "Creates a new ticket request for both registered users (with auth token) and guest users (no auth token)",
        "security": [
          { "bearerAuth": [] },
          {}
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { 
                    "type": "string",
                    "format": "email",
                    "description": "User's email address, required for guest users" 
                  },
                  "title": { 
                    "type": "string",
                    "description": "Title of the ticket issue"
                  },
                  "category_id": { 
                    "type": "integer",
                    "description": "Category ID: 1=General, 2=Billing, 3=IT Support",
                    "enum": [1, 2, 3]
                  },
                  "description": { 
                    "type": "string", 
                    "description": "Detailed description of the issue"
                  }
                },
                "required": ["title", "category_id", "description"]
              },
              "example": {
                "email": "example@email.com",
                "title": "The website is broken",
                "category_id": 3,
                "description": "The products won't add to my cart."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ticket successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "ticket_id": { "type": "integer" },
                    "title": { "type": "string" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "email": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Ticket successfully created",
                  "ticket_id": 8,
                  "title": "The website is broken",
                  "created_at": "2025-06-01T13:44:41.688Z",
                  "email": "example@email.com"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Title and description fields need to be filled"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "insert or update on table \"ticket\" violates foreign key constraint \"ticket_category_id_fkey\""
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Staff"],
        "summary": "Get all assigned tickets",
        "description": "Retrieves all tickets assigned to the authenticated staff member",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter tickets by priority"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter tickets by status"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search tickets by keyword"
          }
        ],
        "responses": {
          "200": {
            "description": "List of staff's assigned tickets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ticket_id": { "type": "integer" },
                      "subject": { "type": "string" },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "Category": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" }
                        }
                      },
                      "Priority": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" }
                        }
                      },
                      "Status": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" }
                        }
                      },
                      "User": {
                        "type": "object",
                        "properties": {
                          "username": { "type": "string", "nullable": true },
                          "email": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "ticket_id": 14,
                    "subject": "new ticket",
                    "createdAt": "2025-06-01T15:36:04.817Z",
                    "Category": {
                      "name": "IT Support"
                    },
                    "Priority": {
                      "name": "Low"
                    },
                    "Status": {
                      "name": "In Progress"
                    },
                    "User": {
                      "username": null,
                      "email": "customer@bianca.com"
                    }
                  },
                  {
                    "ticket_id": 22,
                    "subject": "Another Ticket for IT",
                    "createdAt": "2025-06-02T05:16:11.174Z",
                    "Category": {
                      "name": "IT Support"
                    },
                    "Priority": {
                      "name": "Low"
                    },
                    "Status": {
                      "name": "In Progress"
                    },
                    "User": {
                      "username": "Ally CUSTOMER",
                      "email": "ranaalmira@gmail.com"
                    }
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }          }
        }
      },
      "patch": {
        "tags": ["Staff"],
        "summary": "Claim a ticket",
        "description": "Allows a staff member to claim a ticket from the pool",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ticket_id": { 
                    "type": "integer",
                    "description": "ID of the ticket to claim"
                  }
                },
                "required": ["ticket_id"]
              },
              "example": {
                "ticket_id": 10
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ticket successfully claimed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rowsAffected": { "type": "integer" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      },
      "get": {
          "tags": ["User"],
          "summary": "Get tickets for the authenticated user",
          "description": "Retrieves a list of tickets submitted by the currently authenticated user. Results can be filtered by ticket status and searched by keywords in the subject, description, or by exact ticket ID.",
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Optional: Filter tickets by their status.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["Pending", "In Progress", "Resolved", "Cancelled"]
              },
              "example": "In Progress"
            },
            {
              "name": "search",
              "in": "query",
              "description": "Optional: Search keywords in ticket subject, description, or by exact ticket ID.",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "internet"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved user's tickets.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tickets": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "description": "The unique ID of the ticket."
                            },
                            "subject": {
                              "type": "string",
                              "description": "The subject or title of the ticket."
                            },
                            "description": {
                              "type": "string",
                              "description": "The detailed description of the ticket issue."
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp when the ticket was created."
                            },
                            "Category": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the ticket's category."
                                }
                              },
                              "required": ["name"]
                            },
                            "Status": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The current status name of the ticket."
                                }
                              },
                              "required": ["name"]
                            }
                          },
                          "required": [
                            "id",
                            "subject",
                            "description",
                            "createdAt",
                            "Category",
                            "Status"
                          ]
                        }
                      }
                    }
                  },
                  "example": {
                    "tickets": [
                      {
                        "id": 10,
                        "subject": "Login Issue",
                        "description": "Cannot log in to my account since yesterday.",
                        "createdAt": "2025-06-01T08:00:00Z",
                        "Category": {
                          "name": "Account Support"
                        },
                        "Status": {
                          "name": "In Progress"
                        }
                      },
                      {
                        "id": 15,
                        "subject": "Software Bug Report",
                        "description": "Facing a bug in the reporting module.",
                        "createdAt": "2025-05-28T14:30:00Z",
                        "Category": {
                          "name": "Technical Support"
                        },
                        "Status": {
                          "name": "New"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "message": "An unexpected error occurred"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
    },
    "/user-roles": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user's role status",
        "description": "Determines and returns the role of the authenticated user (user, staff, or admin) based on their JWT token. This endpoint provides boolean flags indicating the user's role for client-side authorization and UI adjustments.",
        "responses": {
          "200": {
            "description": "Successfully retrieved user's role status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isUser": {
                      "type": "boolean",
                      "description": "True if the user is a regular application user (not associated with staff)."
                    },
                    "isStaff": {
                      "type": "boolean",
                      "description": "True if the user is a staff member (role_id 1)."
                    },
                    "isAdmin": {
                      "type": "boolean",
                      "description": "True if the user is an administrator (role_id 2)."
                    }
                  },
                  "required": ["isUser", "isStaff", "isAdmin"]
                },
                "examples": {
                  "userRole": {
                    "summary": "Response for a regular user",
                    "value": {
                      "isUser": true,
                      "isStaff": false,
                      "isAdmin": false
                    }
                  },
                  "staffRole": {
                    "summary": "Response for a staff member",
                    "value": {
                      "isUser": false,
                      "isStaff": true,
                      "isAdmin": false
                    }
                  },
                  "adminRole": {
                    "summary": "Response for an administrator",
                    "value": {
                      "isUser": false,
                      "isStaff": false,
                      "isAdmin": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/priorities": {
      "get": {
        "tags": ["Ticket Management"],
        "summary": "Get available ticket priorities",
        "description": "Returns a list of all available ticket priorities. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] },
          {}
        ],
        "responses": {
          "200": {
            "description": "List of ticket priorities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "name": "High"
                  },
                  {
                    "id": 2,
                    "name": "Medium"
                  },
                  {
                    "id": 3,
                    "name": "Low"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Forbidden access"
                }
              }
            }
          }
        }
      }
  },
    "/statuses": {
      "get": {
        "tags": ["Ticket Management"],
        "summary": "Get available ticket statuses",
        "description": "Returns a list of all available ticket statuses. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "List of ticket statuses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "name": "Pending"
                  },
                  {
                    "id": 2,
                    "name": "In Progress"
                  },
                  {
                    "id": 3,
                    "name": "Resolved"
                  },
                  {
                    "id": 4,
                    "name": "Cancelled"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Forbidden access"
                }
              }
            }
          }
        }      }
    },    "/summary": {
      "get": {
        "tags": ["Staff"],
        "summary": "Get staff performance summary",
        "description": "Retrieves performance metrics for the authenticated staff member",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Staff performance summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "assigned": { 
                        "type": "string", 
                        "description": "Number of tickets assigned to the staff member"
                      },
                      "in_progress": { 
                        "type": "string", 
                        "nullable": true,
                        "description": "Number of tickets in progress" 
                      },
                      "resolved": { 
                        "type": "string", 
                        "nullable": true,
                        "description": "Number of resolved tickets" 
                      },
                      "cancelled": { 
                        "type": "string", 
                        "nullable": true,
                        "description": "Number of cancelled tickets" 
                      }
                    }
                  }
                },
                "example": [
                  {
                    "assigned": "0",
                    "in_progress": null,
                    "resolved": null,
                    "cancelled": null
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/resolve": {
      "patch": {
        "tags": ["Staff"],
        "summary": "Resolve a ticket",
        "description": "Marks a ticket as resolved. Requires staff authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to resolve"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket successfully resolved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "ticket": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "user_id": { "type": "integer" },
                        "staff_id": { "type": "integer" },
                        "category_id": { "type": "integer" },
                        "priority_id": { "type": "integer" },
                        "status_id": { "type": "integer" },
                        "note": { "type": "string", "nullable": true },
                        "subject": { "type": "string" },
                        "description": { "type": "string" },
                        "resolved_at": { "type": "string", "format": "date-time" },
                        "createdAt": { "type": "string", "format": "date-time" },
                        "updatedAt": { "type": "string", "format": "date-time" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Ticket resolved successfully",
                  "ticket": {
                    "id": 6,
                    "user_id": 18,
                    "staff_id": 3,
                    "category_id": 1,
                    "priority_id": 2,
                    "status_id": 3,
                    "note": null,
                    "subject": "Test Ticket 2",
                    "description": "To see the ticket poo",
                    "resolved_at": "2025-05-31T11:31:45.320Z",
                    "createdAt": "2025-05-30T12:55:19.184Z",
                    "updatedAt": "2025-05-31T11:31:45.321Z"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Ticket does not exist or is not assigned to the staff member",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Ticket not found"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/cancel": {
      "patch": {
        "tags": ["Staff"],
        "summary": "Cancel a ticket",
        "description": "Marks a ticket as cancelled. Requires staff authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to cancel"
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket successfully cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "ticket": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "user_id": { "type": "integer" },
                        "staff_id": { "type": "integer" },
                        "category_id": { "type": "integer" },
                        "priority_id": { "type": "integer" },
                        "status_id": { "type": "integer" },
                        "note": { "type": "string", "nullable": true },
                        "subject": { "type": "string" },
                        "description": { "type": "string" },
                        "resolved_at": { "type": "string", "format": "date-time", "nullable": true },
                        "createdAt": { "type": "string", "format": "date-time" },
                        "updatedAt": { "type": "string", "format": "date-time" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Ticket cancelled successfully",
                  "ticket": {
                    "id": 5,
                    "user_id": 18,
                    "staff_id": 3,
                    "category_id": 1,
                    "priority_id": 2,
                    "status_id": 4,
                    "note": null,
                    "subject": "Test Ticket 1",
                    "description": "This is to see the ticket pool",
                    "resolved_at": null,
                    "createdAt": "2025-05-30T12:55:07.221Z",
                    "updatedAt": "2025-05-31T11:29:59.411Z"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Ticket does not exist or is not assigned to the staff member",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Ticket not found"
                }
              }
            }
          }
        }
      }    },    "/status-summary": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get ticket status summary",
        "description": "Retrieves counts of all tickets in the system grouped by status. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Ticket status summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { 
                        "type": "string", 
                        "description": "Status name"
                      },
                      "count": { 
                        "type": "string", 
                        "description": "Number of tickets with this status" 
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "Resolved",
                    "count": "2"
                  },
                  {
                    "name": "In Progress",
                    "count": "6"
                  },
                  {
                    "name": "Cancelled",
                    "count": "4"
                  },
                  {
                    "name": "Pending",
                    "count": "15"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      }    },
    "/username": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get current admin username",
        "description": "Retrieves the username of the currently authenticated admin. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Admin username",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "almiraAdmin"
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      }
    },
    "/all-tickets": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all tickets in the system",
        "description": "Retrieves all tickets in the system with optional filtering capabilities. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter tickets by category"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter tickets by status"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter tickets by priority"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search tickets by keyword"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all tickets matching the filters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ticket_id": { "type": "integer" },
                      "subject": { "type": "string" },
                      "createdAt": { "type": "string", "format": "date-time" },
                      "note": { "type": "string", "nullable": true },
                      "Category": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" }
                        }
                      },
                      "Status": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" }
                        }
                      },
                      "Priority": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "name": { "type": "string" }
                        }
                      },
                      "User": {
                        "type": "object",
                        "properties": {
                          "username": { "type": "string" },
                          "email": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "ticket_id": 2,
                    "subject": "meow again",
                    "createdAt": "2025-05-30T09:24:37.440Z",
                    "note": null,
                    "Category": {
                      "name": "Billing"
                    },
                    "Status": {
                      "name": "Pending"
                    },
                    "Priority": null,
                    "User": {
                      "username": "Ally CUSTOMER",
                      "email": "ranaalmira@gmail.com"
                    }
                  },
                  {
                    "ticket_id": 3,
                    "subject": "I hate all shinger",
                    "createdAt": "2025-05-30T09:31:01.826Z",
                    "note": null,
                    "Category": {
                      "name": "General"
                    },
                    "Status": {
                      "name": "Cancelled"
                    },
                    "Priority": null,
                    "User": {
                      "username": "almira",
                      "email": "almira.rana31@gmail.com"
                    }
                  },
                  {
                    "ticket_id": 1,
                    "subject": "test",
                    "createdAt": "2025-05-30T09:20:51.262Z",
                    "note": null,
                    "Category": {
                      "name": "General"
                    },
                    "Status": {
                      "name": "In Progress"
                    },
                    "Priority": {
                      "name": "High"
                    },
                    "User": {
                      "username": "Ally CUSTOMER",
                      "email": "ranaalmira@gmail.com"
                    }
                  }
                ]
              }
            }
          },          "403": {
            "description": "Forbidden - Authentication failed or insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"                }
              }            }          }        }
      }    },
    "/tickets/{ticketId}/staff": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Assign ticket to staff",
        "description": "Assigns a ticket to a specific staff member. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to assign"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { 
                    "type": "integer",
                    "description": "ID of the staff member to assign the ticket to"
                  }
                },
                "required": ["id"]
              },
              "example": {
                "id": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ticket successfully assigned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      }
    },
    "/staff-performance": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get staff performance metrics",
        "description": "Retrieves performance metrics for all staff members. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
            "200": {
              "description": "Staff performance statistics",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "staff_name": { 
                          "type": "string", 
                          "description": "Name of the staff member" 
                        },
                        "user_id": { 
                          "type": "integer", 
                          "description": "User ID associated with this staff member" 
                        },
                        "staff_id": { 
                          "type": "integer", 
                          "description": "Staff ID" 
                        },
                        "assigned": { 
                          "type": "string", 
                          "description": "Number of tickets assigned to this staff member" 
                        },
                        "resolved": { 
                          "type": "string", 
                          "description": "Number of tickets resolved by this staff member" 
                        },
                        "resolution_rate": { 
                          "type": "string", 
                          "description": "Resolution rate as a percentage" 
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "staff_name": "almira",
                      "user_id": 16,
                      "staff_id": 3,
                      "assigned": "13",
                      "resolved": "3",
                      "resolution_rate": "23.08"
                    }
                  ]
                }
              }
            },
            "403": {
              "description": "Forbidden - Authentication failed or insufficient privileges",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string" }
                    }
                  },
                  "example": {
                    "message": "Token Expired or Invalid Authentication"
                  }
                }
              }
            }
          }
        }
      },   
    "/tickets/{id}": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Update ticket priority",
        "description": "Assigns a new priority level to a ticket. Requires admin authentication.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to update priority"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "priority_id": { 
                    "type": "integer",
                    "description": "ID of the priority level to assign to the ticket"
                  }
                },
                "required": ["priority_id"]
              },
              "example": {
                "priority_id": 3
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Priority successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "user_id": { "type": "integer" },
                    "staff_id": { "type": "integer", "nullable": true },
                    "category_id": { "type": "integer" },
                    "priority_id": { "type": "integer" },
                    "status_id": { "type": "integer" },
                    "note": { "type": "string", "nullable": true },
                    "subject": { "type": "string" },
                    "description": { "type": "string" },
                    "resolved_at": { "type": "string", "format": "date-time", "nullable": true },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": { "type": "string", "format": "date-time" }
                  }
                },
                "example": {
                  "id": 7,
                  "user_id": 18,
                  "staff_id": null,
                  "category_id": 1,
                  "priority_id": 3,
                  "status_id": 1,
                  "note": null,
                  "subject": "Test Ticket 3",
                  "description": "I hate all",
                  "resolved_at": null,
                  "createdAt": "2025-05-30T12:55:30.013Z",
                  "updatedAt": "2025-05-30T12:57:51.398Z"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or insufficient privileges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }
        }
      }    },    "/ticket/{id}": {
      "post": {
        "tags": ["Conversations"],
        "summary": "Start or reopen a conversation",
        "description": "Starts a new conversation or reopens a closed conversation for a ticket. Requires authentication of the staff assigned to the ticket.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket for which to start/reopen a conversation"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversation successfully created or reopened",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "examples": {
                  "created": {
                    "value": {
                      "message": "Successfully created conversation"
                    }
                  },
                  "reopened": {
                    "value": {
                      "message": "Conversation re-opened"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Ticket is closed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Ticket is already closed."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or not the assigned staff",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          }        }
      }
    },    "/ticket/{ticketId}/history": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get conversation history",
        "description": "Retrieves the history of conversations for a specific ticket. Requires authentication of a user or staff associated with the ticket.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the ticket to retrieve conversation history for"
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "endedAt": { "type": "string", "format": "date-time", "nullable": true },
                    "closed": { "type": "boolean" },
                    "Ticket": {
                      "type": "object",
                      "properties": {
                        "user_id": { "type": "integer" },
                        "staff_id": { "type": "integer", "nullable": true }
                      }
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "createdAt": "2025-05-31T15:12:23.374Z",
                  "endedAt": "2025-06-08T15:09:42.595Z",
                  "closed": true,
                  "Ticket": {
                    "user_id": 18,
                    "staff_id": 3
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Forbidden access"
                }
              }
            }
          },
          "404": {
            "description": "No conversation history found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "No conversation history found"
                }
              }
            }
          }
        }
      }
    },    
    "/{conversationId}": {
      "get": {
        "tags": ["Conversations"],
        "summary": "Get full conversation",
        "description": "Retrieves the complete conversation history including all messages. Requires authentication of a user or staff associated with the conversation.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the conversation to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "oneOf": [
                      {
                        "properties": {
                          "id": { "type": "integer" },
                          "content": { "type": "string" },
                          "sentAt": { "type": "string", "format": "date-time" },
                          "sender_id": { "type": "integer" },
                          "sender_username": { "type": "string" },
                          "isSender": { "type": "boolean" }
                        }
                      },
                      {
                        "properties": {
                          "closed": { "type": "boolean" }
                        }
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": 5,
                    "content": "hello user",
                    "sentAt": "2025-05-31T17:55:34.277Z",
                    "sender_id": 16,
                    "sender_username": "almira",
                    "isSender": true
                  },
                  {
                    "id": 6,
                    "content": "how are you",
                    "sentAt": "2025-05-31T17:55:38.686Z",
                    "sender_id": 16,
                    "sender_username": "almira",
                    "isSender": true
                  },
                  {
                    "id": 7,
                    "content": "hello",
                    "sentAt": "2025-05-31T18:00:42.211Z",
                    "sender_id": 18,
                    "sender_username": "Ally CUSTOMER",
                    "isSender": false
                  },
                  {
                    "id": 8,
                    "content": "hello!",
                    "sentAt": "2025-06-01T06:55:02.712Z",
                    "sender_id": 16,
                    "sender_username": "almira",
                    "isSender": true
                  },
                  {
                    "closed": true
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or user not associated with conversation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          },
          "404": {
            "description": "Conversation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Conversation not found"
                }
              }
            }
          }        }
      }
    },
    "/{conversationId}/message": {
      "post": {
        "tags": ["Conversations"],
        "summary": "Send a message in a conversation",
        "description": "Sends a message in an active conversation. Requires authentication of a user or staff associated with the conversation.",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the conversation to send a message to"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The message content to be sent"
                  }
                },
                "required": ["content"]
              },
              "example": {
                "content": "Example text!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message successfully sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "message successfully sent"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Authentication failed or user not associated with conversation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Token Expired or Invalid Authentication"
                }
              }
            }
          },
          "404": {
            "description": "Conversation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Conversation not found"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [{ "bearerAuth": [] }]
}
